/*
 * Lance Namespace REST Specification
 *
 * **Lance Namespace** is an OpenAPI specification on top of the storage-based Lance format. It provides an integration point for catalog service like Apache Hive MetaStore (HMS), Apache Gravitino, etc. to store and use Lance tables. To integrate, the catalog service implements a **Lance Namespace Adapter**, which is a REST server that converts the Lance catalog requests to native requests against the catalog service. Different tools can integrate with Lance Namespace using the generated OpenAPI clients in various languages, and invoke operations in Lance Namespace to read, write and manage Lance tables in the integrated catalog services.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateNamespaceRequest {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "mode")]
    pub mode: Mode,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<std::collections::HashMap<String, String>>,
}

impl CreateNamespaceRequest {
    pub fn new(name: String, mode: Mode) -> CreateNamespaceRequest {
        CreateNamespaceRequest {
            name,
            mode,
            options: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Mode {
    #[serde(rename = "CREATE")]
    Create,
    #[serde(rename = "EXIST_OK")]
    ExistOk,
    #[serde(rename = "OVERWRITE")]
    Overwrite,
}

impl Default for Mode {
    fn default() -> Mode {
        Self::Create
    }
}

